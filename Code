#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>
void lcd_init();
void lcd_cmd(char c);
void lcd_data(char d);
void lcd_puts(const char *s);
void port_init();
int adc(int a1);
void pwm(int p);
int f,g,h,pulse=0;
char t[10],u[10],t2[10];
char s[30];
int main(void)
{
port_init(); lcd_init(); ADCSRA=0x87; GICR|=(1<<6); //
MCUCR=0x02; //external interrupt falling edge
sei();
while(1)
{
f=adc(0); g=f*31/16; sprintf(t,"%d",g);
sprintf(t,"%d",g);
lcd_cmd(0x01); 
lcd_cmd(0x80);
lcd_puts("temp : "); 
lcd_puts(t); 
lcd_puts("deg C");
_delay_ms(500);
h=adc(1);
sprintf(u,"%d",h);
lcd_cmd(0xc0); 
lcd_puts("pir: "); 
lcd_puts(u);
_delay_ms(500);
if((g>50)&&(h>100))
{
pwm(50);
}
else
{
switch(pulse)
{
case 0: 
pwm(0); 
break;
case 1: 
pwm(50); 
break;
case 2: 
pwm(125); 
break;
case 3
pwm(200); 
break;
default: 
pulse=0; 
break;
}
}
 }
}
void port_init()
{
DDRA=0x00;
DDRC=0xff;//
lcd 
DDRD=0xf0;
DDRB=0xff;//pb0 -pb7 output
}
void lcd_init()
{
lcd_cmd(0x38); 
lcd_cmd(0x01);
lcd_cmd(0x80);
lcd_cmd(0x06);
lcd_cmd(00c0);
_delay_ms(5);
lcd_cmd(0x82);
lcd_puts("FAN 
CONTROLL");
lcd_cmd(0xc0);
lcd_puts("----SYSTEM---
");
_delay_ms(2000);
}
void lcd_cmd(char c)
{
PORTC=c; 
PORTD&=~(1
<<6); 
PORTD|=(1<<
7);
_delay_ms(5);
PORTD&=~(1<<7);
}
void lcd_data(char d)
{
PORTC=d; 
PORTD&=~(1
<<6); 
PORTD|=(1<<
7);
_delay_ms(5);
PORTD&=~(1<<7);
}
void lcd_puts(const char *s)
{
while(*s)
{
lcd_data(*s++);
_delay_ms(5);
}
}
Int adc(int a1)
{
ADCSRA=0x87; 
ADMUX=0x60+a1; 
ADCSRA|=(1<<ADSC); 
while((ADCSRA&(1<<ADIF
))==0); return ADCH;
}
void pwm(int p)
{
TCCR0=0
x6c; 
TCNT0=0
; 
OCR0=p;
}
ISR(INT0_vect)
{
pulse++;
}
}
